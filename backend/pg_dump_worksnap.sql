--
-- PostgreSQL database dump
--

-- Dumped from database version 12.3
-- Dumped by pg_dump version 12.3

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: update_posts_text_search(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_posts_text_search() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  NEW.text_search := to_tsvector('english', NEW.summary_text || ' ' || NEW.date);
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.update_posts_text_search() OWNER TO database_workdiary_user;

--
-- Name: update_tabs_text_search(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_tabs_text_search() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  NEW.text_search := to_tsvector('english', NEW.url || ' ' || NEW.title || ' ' || NEW.comment);
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.update_tabs_text_search() OWNER TO database_workdiary_user;

--
-- Name: update_text_search(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_text_search() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  NEW.text_search := to_tsvector('english', NEW.summary_text || ' ' || NEW.date);
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.update_text_search() OWNER TO database_workdiary_user;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: access_control; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.access_control (
    id integer NOT NULL,
    user_id character varying,
    post_id integer,
    access_status character varying
);


ALTER TABLE public.access_control OWNER TO database_workdiary_user;

--
-- Name: COLUMN access_control.access_status; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.access_control.access_status IS 'read-only or read-write';


--
-- Name: access_control_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.access_control ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.access_control_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: invalid_tokens; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.invalid_tokens (
    id integer NOT NULL,
    user_id character varying,
    token text
);


ALTER TABLE public.invalid_tokens OWNER TO database_workdiary_user;

--
-- Name: invalid_tokens_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.invalid_tokens_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.invalid_tokens_id_seq OWNER TO database_workdiary_user;

--
-- Name: invalid_tokens_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.invalid_tokens_id_seq OWNED BY public.invalid_tokens.id;


--
-- Name: posts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.posts (
    id integer NOT NULL,
    user_id character varying,
    date date,
    summary_text text,
    summary_voice bytea,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    last_updated timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    text_search tsvector
);


ALTER TABLE public.posts OWNER TO database_workdiary_user;

--
-- Name: COLUMN posts.summary_text; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.posts.summary_text IS 'This should be your EOD notes. What happened today.';


--
-- Name: posts_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.posts ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.posts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shared_posts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shared_posts (
    id integer NOT NULL,
    pointer_id character varying,
    post_id integer,
    shared_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE public.shared_posts OWNER TO database_workdiary_user;

--
-- Name: shared_posts_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.shared_posts ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.shared_posts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: tabs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.tabs (
    id integer NOT NULL,
    post_id integer,
    title character varying,
    url text,
    comment character varying,
    tab_order integer,
    text_search tsvector,
    icon text,
    screenshot text
);


ALTER TABLE public.tabs OWNER TO database_workdiary_user;

--
-- Name: COLUMN tabs.comment; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.tabs.comment IS 'your little opinions about the tab';


--
-- Name: tabs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.tabs ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.tabs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: tags; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.tags (
    id integer NOT NULL,
    post_id integer,
    text character varying
);


ALTER TABLE public.tags OWNER TO database_workdiary_user;

--
-- Name: tags_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.tags ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.tags_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: transcribe_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.transcribe_log (
    id integer NOT NULL,
    user_id character varying,
    date timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    count integer DEFAULT 1
);


ALTER TABLE public.transcribe_log OWNER TO database_workdiary_user;

--
-- Name: transcribe_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.transcribe_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.transcribe_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    id character varying NOT NULL,
    email character varying NOT NULL,
    name character varying,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    alarm_status boolean DEFAULT true,
    alarm_time character varying DEFAULT '17:00'::character varying,
    auto_pull_tabs boolean DEFAULT false,
    alarm_days jsonb[] DEFAULT ARRAY['{"day": "sun", "value": false}'::jsonb, '{"day": "mon", "value": true}'::jsonb, '{"day": "tue", "value": true}'::jsonb, '{"day": "wed", "value": true}'::jsonb, '{"day": "thu", "value": true}'::jsonb, '{"day": "fri", "value": true}'::jsonb, '{"day": "sat", "value": false}'::jsonb],
    password character varying,
    auth_provider character varying(50)
);


ALTER TABLE public.users OWNER TO database_workdiary_user;

--
-- Name: invalid_tokens id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.invalid_tokens ALTER COLUMN id SET DEFAULT nextval('public.invalid_tokens_id_seq'::regclass);


--
-- Name: access_control access_control_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.access_control
    ADD CONSTRAINT access_control_pkey PRIMARY KEY (id);


--
-- Name: invalid_tokens invalid_tokens_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.invalid_tokens
    ADD CONSTRAINT invalid_tokens_pkey PRIMARY KEY (id);


--
-- Name: posts posts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.posts
    ADD CONSTRAINT posts_pkey PRIMARY KEY (id);


--
-- Name: shared_posts shared_posts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shared_posts
    ADD CONSTRAINT shared_posts_pkey PRIMARY KEY (id);


--
-- Name: tabs tabs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tabs
    ADD CONSTRAINT tabs_pkey PRIMARY KEY (id);


--
-- Name: tags tags_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tags
    ADD CONSTRAINT tags_pkey PRIMARY KEY (id);


--
-- Name: transcribe_log transcribe_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.transcribe_log
    ADD CONSTRAINT transcribe_log_pkey PRIMARY KEY (id);


--
-- Name: users unique_email; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT unique_email UNIQUE (email);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: posts_search_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX posts_search_idx ON public.posts USING gin (text_search);


--
-- Name: tabs_search_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tabs_search_idx ON public.tabs USING gin (text_search);


--
-- Name: posts update_posts_text_search_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_posts_text_search_trigger BEFORE INSERT OR UPDATE ON public.posts FOR EACH ROW EXECUTE FUNCTION public.update_posts_text_search();


--
-- Name: tabs update_tabs_text_search_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_tabs_text_search_trigger BEFORE INSERT OR UPDATE ON public.tabs FOR EACH ROW EXECUTE FUNCTION public.update_tabs_text_search();


--
-- Name: access_control access_control_post_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.access_control
    ADD CONSTRAINT access_control_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.posts(id) ON DELETE CASCADE;


--
-- Name: access_control access_control_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.access_control
    ADD CONSTRAINT access_control_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: invalid_tokens invalid_tokens_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.invalid_tokens
    ADD CONSTRAINT invalid_tokens_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: posts posts_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.posts
    ADD CONSTRAINT posts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: shared_posts shared_posts_post_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shared_posts
    ADD CONSTRAINT shared_posts_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.posts(id) ON DELETE CASCADE;


--
-- Name: tabs tabs_post_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tabs
    ADD CONSTRAINT tabs_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.posts(id) ON DELETE CASCADE;


--
-- Name: tags tags_post_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tags
    ADD CONSTRAINT tags_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.posts(id) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

